import sys
import shutil
import pytest
from pathlib import Path

sys.path.append(str(Path(__file__).resolve().parents[2]))

# Import your actual functions
from src.pdf.generate_pdf import generate_pdf  # adjust if inside a function/class
from src.pdf.automate_pdf import main as automate_pdf_main  # assuming automate_pdf.py has a main()


BASE_DIR = Path(__file__).parent.parent.parent
INCLUDES_DIR = BASE_DIR / "includes"
JSON_DIR = BASE_DIR / "src" / "tests"
TEMP_DIR = BASE_DIR / "temp"


# Make sure temp directory exists
TEMP_DIR.mkdir(parents=True, exist_ok=True)


# --- Pytest fixture to clean TEMP_DIR before each test ---
@pytest.fixture(autouse=True)
def clean_temp():
    """Remove all files in temp directory before each test."""
    for f in TEMP_DIR.glob("*"):
        f.unlink()
    yield
    for f in TEMP_DIR.glob("*"):
        f.unlink()


# --- Parameterize test with all JSON files in JSON_DIR ---
@pytest.mark.parametrize("json_file", list(JSON_DIR.glob("*.json")))
def test_generate_and_automate(json_file):
    """Test both PDF generation methods for each JSON file."""

    # Copy JSON file into TEMP_DIR so both methods can use it
    dest_json = TEMP_DIR / json_file.name
    shutil.copy(json_file, dest_json)

    # --- Test generate_pdf.py ---
    print(f"\n[TEST] Running generate_pdf on {json_file.name}")
    try:
        pdf_path = generate_pdf(dest_json)
        assert pdf_path.exists(), f"PDF not created by generate_pdf for {json_file.name}"
        assert pdf_path.stat().st_size > 0, f"PDF is empty for {json_file.name}"
    except Exception as e:
        pytest.fail(f"generate_pdf failed for {json_file.name}: {e}")

    # --- Test automate_pdf.py ---
    print(f"[TEST] Running automate_pdf on {json_file.name}")
    try:
        automate_pdf_main(json_path=dest_json)  # pass path if your function supports it
        generated_pdfs = list(TEMP_DIR.glob("*.pdf"))
        assert generated_pdfs, f"No PDFs generated by automate_pdf for {json_file.name}"
        for pdf in generated_pdfs:
            assert pdf.stat().st_size > 0, f"Automate PDF is empty for {json_file.name}"
    except Exception as e:
        pytest.fail(f"automate_pdf failed for {json_file.name}: {e}")